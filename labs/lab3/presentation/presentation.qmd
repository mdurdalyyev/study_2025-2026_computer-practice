---
## Front matter
lang: ru-RU
title: Лабораторная работа №3
subtitle: "Управляющие структуры"
author:
  - Дурдалыев Максат
teacher:
  - Кулябов Д. С.
  - д.ф.-м.н., профессор
  - профессор кафедры теории вероятностей и кибербезопасности 
institute:
  - Российский университет дружбы народов имени Патриса Лумумбы, Москва, Россия
date: today
date-format: "YYYY-MM-DD" # Example: 2025-09-06

## i18n babel
babel-lang: russian
babel-otherlangs: english
---

## Докладчик

:::::::::::::: {.columns align=center}
::: {.column width="70%"}

  * Дурдалыев Максат
  * Cтудент НКНбд-01-22
  * Российский университет дружбы народов имени Патриса Лумумбы
  * [1132205337@pfur.ru](mailto:1132205337@pfur.ru)
  * <https://github.com/mdurdalyyev>

:::
::: {.column width="30%"}

![](./image/durdalyyev.jpg)

:::
::::::::::::::

## Цели и задачи

**Цель работы**

Основная цель работы — освоить применение циклов функций и сторонних для Julia пакетов для решения задач линейной алгебры и работы с матрицами.

**Задание**

1. Используя Jupyter Lab, повторите примеры.
2. Выполните задания для самостоятельной работы.

##  Циклы while и for

Для различных операций, связанных с перебором индексируемых элементов структур данных, традиционно используются циклы while и for.

Синтаксис while

``` Julia
while <condition>
    <loop body>
end
```

##  Циклы while и for

![Примеры использования цикла while](image/1.png){ #fig:001 width=100% height=100% }

##  Циклы while и for

Такие же результаты можно получить при использовании цикла for.

Синтаксис for

``` Julia
for <variable> in <range>
    <loop body>
end
```

##  Циклы while и for

![Примеры использования цикла for](image/2.png){ #fig:002 width=100% height=100% }

##  Циклы while и for

![Пример использования цикла for для создания двумерного массива](image/3.png){ #fig:003 width=90% height=90% }

##  Циклы while и for

![Пример использования цикла for для создания двумерного массива](image/4.png){ #fig:004 width=100% height=100% }

## Условные выражения

Довольно часто при решении задач требуется проверить выполнение тех или иных условий. Для этого используют условные выражения.

Синтаксис условных выражений с ключевым словом:

``` Julia
if <condition 1>
    <action 1>
elseif <condition 2>
    <action 2>
else
    <action 3>
end
```

## Условные выражения

![Примеры использования условного выражения](image/5.png){ #fig:005 width=100% height=100% }

## Функции 

![Примеры способов написания функции](image/6.png){ #fig:006 width=100% height=100% }

## Функции

![Примеры способов написания функции](image/7.png){ #fig:007 width=100% height=100% }

## Функции

По соглашению в Julia функции, сопровождаемые восклицательным знаком, изменяют свое содержимое, а функции без восклицательного знака не делают этого:

![Сравнение результатов вывода](image/8.png){ #fig:008 width=100% height=100% }

## Функции

В Julia функция map является функцией высшего порядка, которая принимает функцию в качестве одного из своих входных аргументов и применяет эту функцию к каждому элементу структуры данных, которая ей передаётся также в качестве аргумента.

Функция broadcast — ещё одна функция высшего порядка в Julia, представляющая собой обобщение 
функции map.Функция broadcast() будет пытаться привести все объекты
к общему измерению, map() будет напрямую применять данную функцию поэлементно.

## Функции

![Примеры использования функций map() и broadcast()](image/9.png){ #fig:009 width=90% height=90% }

## Функции

![Примеры использования функций map() и broadcast()](image/10.png){ #fig:010 width=80% height=80% }

## Функции

![Примеры использования функций map() и broadcast()](image/11.png){ #fig:011 width=100% height=100% }

## Сторонние библиотеки (пакеты) в Julia

![Пример использования сторонних библиотек](image/12.png){ #fig:012 width=90% height=90% }

## Самостоятельная работа

![Выполнение подпунктов задания №1](image/13.png){ #fig:013 width=80% height=80% }

## Самостоятельная работа

![Выполнение подпунктов задания №1](image/14.png){ #fig:014 width=90% height=90% }

## Самостоятельная работа

![Выполнение подпунктов задания №1](image/15.png){ #fig:015 width=100% height=100% }

## Самостоятельная работа

![Выполнение задания №2 и №3](image/16.png){ #fig:016 width=100% height=100% }

## Самостоятельная работа

![Выполнение задания №4](image/17.png){ #fig:017 width=100% height=100% }

## Самостоятельная работа

![Выполнение задания №5](image/18.png){ #fig:018 width=100% height=100% }

## Самостоятельная работа

![Выполнение задания №6](image/19.png){ #fig:019 width=100% height=100% }

## Самостоятельная работа

![Выполнение задания №7](image/20.png){ #fig:020 width=80% height=80% }

## Самостоятельная работа

![Выполнение задания №7](image/21.png){ #fig:021 width=80% height=80% }

## Самостоятельная работа

![Выполнение задания №7](image/22.png){ #fig:022 width=80% height=80% }

## Самостоятельная работа

![Выполнение задания №7 и №8](image/23.png){ #fig:023 width=80% height=80% }

## Самостоятельная работа

![Выполнение подпунктов задания №8](image/24.png){ #fig:024 width=80% height=80% }

## Самостоятельная работа

![Выполнение подпунктов задания №8](image/25.png){ #fig:025 width=100% height=100% }

## Самостоятельная работа

![Выполнение задания №9 и №10](image/26.png){ #fig:026 width=80% height=80% }

## Самостоятельная работа

![Выполнение подпунктов задания №10](image/27.png){ #fig:027 width=80% height=80% }

## Самостоятельная работа

![Выполнение задания №11](image/28.png){ #fig:028 width=80% height=80% }

## Выводы

В результате выполнения данной лабораторной работы я освоил применение циклов функций и сторонних для Julia пакетов для решения задач линейной алгебры и работы с матрицами.